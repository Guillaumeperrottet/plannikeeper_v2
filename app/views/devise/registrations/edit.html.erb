<section class="vh-100" style="background-color: #f4f5f7;">
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col col-lg-6 mb-4 mb-lg-0">
        <div class="card mb-3" style="border-radius: .5rem;">
          <div class="row g-0">
            <!-- Colonne gauche : Avatar -->
            <div class="col-md-4 gradient-custom text-center text-white"
              style="border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;">
              <img id="profile-avatar" src="<%= current_user.avatar.attached? ? url_for(current_user.avatar) : 'https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp' %>"
                alt="Avatar" class="img-fluid my-5" style="width: 80px; cursor: pointer;" />
              <input
                id="user-name-field"
                type="text"
                class="form-control mt-3 text-center mx-auto d-block"
                value="<%= current_user.name %>"
                data-url="<%= registration_path(current_user) %>"
                style="background: rgba(255,255,255,0.2); color: #fff; border: none; font-weight: bold; max-width: 120px;"
                autocomplete="off"
              />
                <div class="" style="padding-top: 200px;">
                  <% if current_user.enterprise_admin? %>
                  <%= link_to "Gestion des utilisateurs", company_users_path, class: "btn btn--submit pt-3" %>
                  <% end %>
                  <button
                  id="delete-account-btn"
                  class="btn btn-submit-delete"
                  data-controller="delete-confirm"
                  data-action="click->delete-confirm#confirm"
                  data-delete-confirm-url-value="<%= registration_path(current_user) %>"
                  data-delete-confirm-message-value="Êtes-vous sûr de vouloir supprimer votre compte ? Cette action est irréversible."
                  >
                  Supprimer mon compte
                  </button>
                </div>
            </div>

            <!-- Colonne droite : Informations utilisateur -->
            <div class="col-md-8">
              <div class="card-body p-4">
                <div class="d-flex justify-content-between align-items-center">
                  <h6>Informations</h6>
                  <%= link_to request.referrer || root_path, class: "text-dark" do %>
                    <i class="fa-solid fa-xmark"></i>
                  <% end %>
                </div>
                <hr class="mt-0 mb-4">
                <div class="row pt-1">
                  <div class="mb-3">
                  <p><%= current_user.email %></p>
                  </div>
                  <div class="col-6 mb-3">
                  <h6>Compte</h6>
                  <p class="text-muted">
                    <% if current_user.role == 'enterprise_user' %>
                    Utilisateur
                    <% elsif current_user.role == 'enterprise_admin' %>
                    Administrateur
                    <% else %>
                    Utilisateur privé
                    <% end %>
                  </p>
                  </div>
                  <%# Display enterprise info if user belongs to one %>
                  <% if current_user.role == 'enterprise_admin' || current_user.role == 'enterprise_user' %>
                    <div class="col-6 mb-3">
                      <h6>Entreprise</h6>
                      <p class="text-muted"><%= current_user.company&.name %></p>
                    </div>
                  <% end %>
                </div>
                <h6>Changer le mot de passe</h6>
                <hr class="mt-0 mb-4">
                <%# The form_with helper requires @resource, resource_name, and optionally @minimum_password_length to be set in the controller %>
                <%# Ensure your Devise controller (e.g., registrations#edit) provides these variables %>
                <%= form_with(model: resource, scope: resource_name, url: registration_path(resource_name), method: :put, id: "password-change-form", html: { class: "row pt-1" }) do |f| %>
                  <div class="col-12 mb-3">
                  <%= f.label :current_password, "Mot de passe actuel", class: "form-label small" %>
                  <%= f.password_field :current_password, autocomplete: "current-password", class: "form-control form-control-sm" %>
                  </div>
                  <div class="col-12 mb-3">
                  <%= f.label :password, "Nouveau mot de passe", class: "form-label small" %>
                  <%= f.password_field :password, autocomplete: "new-password", class: "form-control form-control-sm" %>
                  <% if @minimum_password_length %>
                    <small class="form-text text-muted"><%= @minimum_password_length %> caractères minimum</small>
                  <% end %>
                  </div>
                  <div class="col-12 mb-3">
                  <%= f.label :password_confirmation, "Confirmer le nouveau mot de passe", class: "form-label small" %>
                  <%= f.password_field :password_confirmation, autocomplete: "new-password", class: "form-control form-control-sm" %>
                  </div>
                  <div class="col-12">
                  <%= f.submit "Changer le mot de passe", class: "btn btn-submit-delete" %>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const nameField = document.getElementById("user-name-field");
    if (nameField) {
      nameField.addEventListener("blur", () => {
        const url = nameField.dataset.url;
        const token = document.querySelector('meta[name="csrf-token"]').content;
        const newName = nameField.value;

        if (newName === nameField.defaultValue) return;

        fetch(url, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": token
          },
          body: JSON.stringify({ user: { name: newName } })
        })
        .then(response => {
          if (response.ok) {
            nameField.defaultValue = newName;
            Swal.fire({
              position: "top",
              icon: "success",
              title: "Votre nom a été enregistré",
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            nameField.value = nameField.defaultValue;
            Swal.fire({
              position: "top",
              icon: "error",
              title: "Erreur lors de l'enregistrement",
              showConfirmButton: false,
              timer: 1500
            });
          }
        })
        .catch(() => {
          nameField.value = nameField.defaultValue;
          Swal.fire({
            position: "top",
            icon: "error",
            title: "Erreur réseau",
            showConfirmButton: false,
            timer: 1500
          });
        });
      });
    }
          // Ajout pour valider avec "Entrée"
      nameField.addEventListener("keydown", (event) => {
        if (event.key === "Enter") {
          event.preventDefault();
          nameField.blur();
        }
      });
  });
</script>
